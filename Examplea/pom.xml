<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.anypresence.sdk.anypresence_inc.examplea</groupId>
  <artifactId>android</artifactId>
  <packaging>jar</packaging>
  <version>2-SNAPSHOT</version>
  <name>sdk</name>
  <url>http://maven.apache.org</url>

  <properties>
    <maven.compiler.target>1.6</maven.compiler.target>
    <maven.compiler.source>1.6</maven.compiler.source>
    <proguard-maven-plugin-version>2.0.7</proguard-maven-plugin-version>
    <maven-javadoc-plugin-version>2.9.1</maven-javadoc-plugin-version>
  </properties>

  <repositories>
    <repository>
      <id>in-project</id>
      <name>In Project Repo</name>
      <url>file://${project.basedir}/libs</url>
    </repository>

    <repository>
        <id>oss-sonatype</id>
        <name>oss-sonatype</name>
        <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        <snapshots>
            <enabled>true</enabled>
        </snapshots>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
    	<groupId>org.apache.commons</groupId>
    	<artifactId>commons-lang3</artifactId>
    	<version>3.0</version>
    </dependency>

    <dependency>
    	<groupId>commons-beanutils</groupId>
    	<artifactId>commons-beanutils</artifactId>
    	<version>1.8.3</version>
    </dependency>

    <dependency>
    	<groupId>com.google.code.gson</groupId>
    	<artifactId>gson</artifactId>
    	<version>2.2.3</version>
    </dependency>

    <dependency>
    	<groupId>commons-logging</groupId>
    	<artifactId>commons-logging</artifactId>
    	<version>1.1.1</version>
    </dependency>

    <dependency>
    	<groupId>com.google.guava</groupId>
    	<artifactId>guava</artifactId>
    	<version>13.0</version>
    </dependency>

    <dependency>
    	<groupId>joda-time</groupId>
    	<artifactId>joda-time</artifactId>
    	<version>2.2</version>
    </dependency>

    <dependency>
      <groupId>com.google.android</groupId>
      <artifactId>android</artifactId>
      <version>4.1.1.4</version>
    </dependency>

		<dependency>
      <groupId>anypresence</groupId>
      <artifactId>RailsDroid</artifactId>
      <version>0.0.8</version>
      <type>jar</type>
    </dependency>

    <dependency>
      <groupId>anypresence</groupId>
      <artifactId>anypresence-base</artifactId>
      <version>1.0-SNAPSHOT</version>
      <type>jar</type>
    </dependency>

    <dependency>
      <groupId>anypresence</groupId>
      <artifactId>anypresence-base</artifactId>
      <version>1.0-SNAPSHOT</version>
      <type>jar</type>
      <classifier>sources</classifier>
    </dependency>

    <dependency>
      <groupId>anypresence</groupId>
      <artifactId>anypresence-sdk</artifactId>
      <version>1.0-SNAPSHOT</version>
      <type>jar</type>
    </dependency>

    <dependency>
      <groupId>anypresence</groupId>
      <artifactId>anypresence-sdk</artifactId>
      <version>1.0-SNAPSHOT</version>
      <type>jar</type>
      <classifier>sources</classifier>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
    	<groupId>org.easymock</groupId>
    	<artifactId>easymock</artifactId>
    	<version>3.1</version>
    	<scope>test</scope>
    </dependency>

    <dependency>
    	<groupId>org.powermock</groupId>
    	<artifactId>powermock-module-junit4</artifactId>
    	<version>1.4.9</version>
    	<scope>test</scope>
    </dependency>

    <dependency>
    	<groupId>org.powermock</groupId>
    	<artifactId>powermock-api-easymock</artifactId>
    	<version>1.5</version>
    	<scope>test</scope>
    </dependency>

    <dependency>
    	<groupId>org.powermock</groupId>
    	<artifactId>powermock-api-mockito</artifactId>
    	<version>1.4.12</version>
    	<scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.robolectric</groupId>
      <artifactId>robolectric</artifactId>
      <version>2.2</version>
      <scope>test</scope>
      <classifier>jar-with-dependencies</classifier>
    </dependency>

    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
      <version>3.5.7</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>de.greenrobot</groupId>
      <artifactId>greendao</artifactId>
      <version>1.3.1</version>
      <type>jar</type>
    </dependency>
  </dependencies>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin-version}</version>
        <configuration>
          <javadocExecutable>/${java.home}/../bin/javadoc</javadocExecutable>
          <aggregate>true</aggregate>
          <quiet>true</quiet>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>linux</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <properties>
        <rt.jar.path>${java.home}/lib/rt.jar</rt.jar.path>
        <jsse.jar.path>${java.home}/lib/jsse.jar</jsse.jar.path>
      </properties>
    </profile>
    <!-- mac profile has to be after unix since running on mac will trigger both -->
    <profile>
      <id>mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <!-- absolute path -->
        <!--<rt.jar.path>/System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Classes/classes.jar</rt.jar.path> -->
        <!-- or with JAVA_HOME /System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home/ -->
        <rt.jar.path>${java.home}/lib/rt.jar</rt.jar.path>
        <jsse.jar.path>${java.home}/lib/jsse.jar</jsse.jar.path>
      </properties>
    </profile>

    <!-- fatjar profile to build sdk with dependencies -->
    <profile>
      <id>fatjar</id>
      <properties>
        <env>notslim</env>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <artifactSet>
                <excludes>
                  <exclude>com.google.android:android</exclude>
                  <exclude>junit:junit</exclude>
                  <exclude>commons-logging:commons-logging</exclude>
                  <exclude>commons-beanutils:commons-beanutils</exclude>
                  <exclude>org.khronos:opengl-api</exclude>
                  <exclude>xerces:xmlParserAPIs</exclude>
                  <exclude>xpp3:xpp3</exclude>
                </excludes>
              </artifactSet>
              <finalName>anypresence-${project.artifactId}-${project.version}</finalName>
            </configuration>
            </plugin>

            <plugin>
            <groupId>com.github.wvengen</groupId>
            <artifactId>proguard-maven-plugin</artifactId>
            <version>${proguard-maven-plugin-version}</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>proguard</goal>
                </goals>
                <configuration>
                  <maxMemory>256m</maxMemory>
                  <injar>anypresence-${project.artifactId}-${project.version}.jar</injar>
                  <outjar>anypresence-${project.artifactId}-${project.version}-proguarded.jar</outjar>
                  <obfuscate>false</obfuscate>
                  <addMavenDescriptor>false</addMavenDescriptor>
                  <proguardInclude>${project.basedir}/proguard.conf</proguardInclude>
                  <libs>
                    <lib>${rt.jar.path}</lib>
                    <lib>libs/jsr305-2.0.1.jar</lib>
                    <lib>libs/javax.inject-1.jar</lib>
                  </libs>
                  <options>
                    <option>-ignorewarnings</option>
                    <option>-keep class com.anypresence.** {*;}</option>
                    <option>-keep interface com.anypresence.** {*;}</option>
                  </options>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- slimjar profile to build sdk without dependencies -->
    <profile>
      <id>slimjar</id>
      <activation>
        <property>
          <name>!notslim</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-shade-plugin</artifactId>
              <executions>
                <execution>
                  <phase>package</phase>
                  <goals>
                    <goal>shade</goal>
                  </goals>
                </execution>
              </executions>
              <configuration>
                <artifactSet>
                  <includes>
                    <include>${project.groupId}:${project.artifactId}</include>
                  </includes>
                </artifactSet>
                <finalName>anypresence-${project.artifactId}-${project.version}</finalName>
              </configuration>
              </plugin>


              <plugin>
              <groupId>com.github.wvengen</groupId>
              <artifactId>proguard-maven-plugin</artifactId>
              <version>${proguard-maven-plugin-version}</version>
              <executions>
                <execution>
                  <phase>package</phase>
                  <goals>
                    <goal>proguard</goal>
                  </goals>
                  <configuration>
                    <maxMemory>256m</maxMemory>
                    <injar>anypresence-${artifactId}-${version}.jar</injar>
                    <outjar>anypresence-${artifactId}-${version}-no-dependencies-proguarded.jar</outjar>
                    <obfuscate>false</obfuscate>
                    <addMavenDescriptor>false</addMavenDescriptor>
                    <proguardInclude>${project.basedir}/proguard.conf</proguardInclude>
                    <libs>
                      <lib>${rt.jar.path}</lib>
                      <lib>libs/jsr305-2.0.1.jar</lib>
                      <lib>libs/javax.inject-1.jar</lib>
                    </libs>
                    <options>
                      <option>-ignorewarnings</option>
                      <option>-keep class com.anypresence.** {*;}</option>
                      <option>-keep interface com.anypresence.** {*;}</option>
                    </options>
                  </configuration>
                </execution>
              </executions>
          </plugin>

        </plugins>
      </build>
    </profile>

  </profiles>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin-version}</version>
        <configuration>
            <javadocExecutable>/${java.home}/../bin/javadoc</javadocExecutable>
            <failOnError>false</failOnError>
            <quiet>true</quiet>
            <includeDependencySources>true</includeDependencySources>
              <dependencySourceIncludes>
                  <dependencySourceInclude>anypresence:anypresence-sdk</dependencySourceInclude>
                  <dependencySourceInclude>anypresence:anypresence-base</dependencySourceInclude>
              </dependencySourceIncludes>
        <excludePackageNames>*com.anypresence.anypresence_inc.examplea.dao.*</excludePackageNames></configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.14.1</version>
        <configuration>
          <systemProperties>
            <property>
               <name>testLiveBackend</name>
               <value>${testLiveBackend}</value>
            </property>
          </systemProperties>
          <forkCount>3</forkCount>
          <reuseForks>false</reuseForks>
          <argLine>-Xmx1024m -XX:MaxPermSize=256m</argLine>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
            <execution>
                <phase>generate-sources</phase>
                <goals><goal>add-source</goal></goals>
                <configuration>
                    <sources>
                        <source>src-gen</source>
                        <source>src-main</source>
                    </sources>
                </configuration>
            </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>
