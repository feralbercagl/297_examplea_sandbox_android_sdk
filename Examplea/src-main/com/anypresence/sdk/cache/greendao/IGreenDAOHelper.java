package com.anypresence.sdk.cache.greendao;

//
//  IGreenDAOHelper.java
//  
//
//  Generated by AnyPresence, Inc on 2014-12-18
//  Copyright (c) 2014. All rights reserved.
//

import de.greenrobot.dao.query.*;
import de.greenrobot.dao.*;
import com.anypresence.sdk.acl.*;
import com.anypresence.sdk.callbacks.*;
import com.anypresence.sdk.query.*;
import com.anypresence.sdk.APSDKSetup;
import java.lang.reflect.*;
import com.anypresence.sdk.cache.*;
import com.anypresence.sdk.cache.internal.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.anypresence.sdk.cache.internal.*;
import com.anypresence.sdk.cache.internal.APObjectsAPCachedRequests;
import com.anypresence.anypresence_inc.examplea.dao.DaoMaster;
import com.anypresence.anypresence_inc.examplea.dao.DaoSession;
import android.database.sqlite.SQLiteDatabase;
import com.anypresence.sdk.examplea.models.*;
import com.anypresence.rails_droid.*;
import com.anypresence.sdk.config.Config;

import static com.anypresence.sdk.APSDKSetup.DEBUG_MODE;

import java.util.*;

interface IGreenDAOHelper {
	public com.anypresence.anypresence_inc.examplea.dao.APObject createObject(
			com.anypresence.sdk.APObject object);

	public List<? extends com.anypresence.anypresence_inc.examplea.dao.APObject> getObjectsByObjectId(
			com.anypresence.sdk.APObject object);

	public void updateObject(com.anypresence.sdk.APObject object);

	public Long insertObject(
			com.anypresence.anypresence_inc.examplea.dao.APObject object);

	public void updateEachObject(
			com.anypresence.anypresence_inc.examplea.dao.APObject object,
			IAPCachedRequest request,
			List<? extends com.anypresence.anypresence_inc.examplea.dao.APObject> existingObjects);

	public void deleteAllInCacheWithObjectIdPredicate(String objectId);

	public void deleteAllInCacheWithScopePredicate(String scope);

	public <T extends com.anypresence.sdk.APObject> List<T> fetchInCacheWithPredicates(
			Map<String, String> predicates);

	public <T extends com.anypresence.sdk.APObject> List<T> fetchInCacheWithScopePredicate(
			String scope, Map<String, String> params, Integer offset,
			Integer limit);

	public <T extends com.anypresence.sdk.APObject> List<T> fetchInCacheWithAPCachedRequestPredicate(
			IAPCachedRequest request);

	public <T extends com.anypresence.sdk.APObject> List<T> fetchInCacheWithIds(
			Set<Long> objectIds);

	public <T extends com.anypresence.sdk.APObject> List<T> fetchInCacheWithObjectIdPredicate(
			String objectId);

	public <T extends com.anypresence.sdk.APObject> List<T> loadAllInCache();
}
