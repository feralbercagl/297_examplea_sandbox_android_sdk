package com.anypresence.anypresence_inc.examplea.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.anypresence.anypresence_inc.examplea.dao.APCachedRequest;
import com.anypresence.anypresence_inc.examplea.dao.APObjectsAPCachedRequests;
import com.anypresence.anypresence_inc.examplea.dao.Examaobjectmodel;

import com.anypresence.anypresence_inc.examplea.dao.APCachedRequestDao;
import com.anypresence.anypresence_inc.examplea.dao.APObjectsAPCachedRequestsDao;
import com.anypresence.anypresence_inc.examplea.dao.ExamaobjectmodelDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

	private final DaoConfig aPCachedRequestDaoConfig;
	private final DaoConfig aPObjectsAPCachedRequestsDaoConfig;
	private final DaoConfig examaobjectmodelDaoConfig;

	private final APCachedRequestDao aPCachedRequestDao;
	private final APObjectsAPCachedRequestsDao aPObjectsAPCachedRequestsDao;
	private final ExamaobjectmodelDao examaobjectmodelDao;

	public DaoSession(SQLiteDatabase db, IdentityScopeType type,
			Map<Class<? extends AbstractDao<?, ?>>, DaoConfig> daoConfigMap) {
		super(db);

		aPCachedRequestDaoConfig = daoConfigMap.get(APCachedRequestDao.class)
				.clone();
		aPCachedRequestDaoConfig.initIdentityScope(type);

		aPObjectsAPCachedRequestsDaoConfig = daoConfigMap.get(
				APObjectsAPCachedRequestsDao.class).clone();
		aPObjectsAPCachedRequestsDaoConfig.initIdentityScope(type);

		examaobjectmodelDaoConfig = daoConfigMap.get(ExamaobjectmodelDao.class)
				.clone();
		examaobjectmodelDaoConfig.initIdentityScope(type);

		aPCachedRequestDao = new APCachedRequestDao(aPCachedRequestDaoConfig,
				this);
		aPObjectsAPCachedRequestsDao = new APObjectsAPCachedRequestsDao(
				aPObjectsAPCachedRequestsDaoConfig, this);
		examaobjectmodelDao = new ExamaobjectmodelDao(
				examaobjectmodelDaoConfig, this);

		registerDao(APCachedRequest.class, aPCachedRequestDao);
		registerDao(APObjectsAPCachedRequests.class,
				aPObjectsAPCachedRequestsDao);
		registerDao(Examaobjectmodel.class, examaobjectmodelDao);
	}

	public void clear() {
		aPCachedRequestDaoConfig.getIdentityScope().clear();
		aPObjectsAPCachedRequestsDaoConfig.getIdentityScope().clear();
		examaobjectmodelDaoConfig.getIdentityScope().clear();
	}

	public APCachedRequestDao getAPCachedRequestDao() {
		return aPCachedRequestDao;
	}

	public APObjectsAPCachedRequestsDao getAPObjectsAPCachedRequestsDao() {
		return aPObjectsAPCachedRequestsDao;
	}

	public ExamaobjectmodelDao getExamaobjectmodelDao() {
		return examaobjectmodelDao;
	}

}
